version: "3"

includes:
  c:
    taskfile: ../common
    dir: ../common

tasks:
  default:
    desc: Install minimal set of used languages
    cmds:
      - task: bash
      - task: pwsh
      - task: zsh
  bash:
    cmds:
      - cmd: echo "bash is already installed"
        platforms: [darwin, linux]
      - task: c:windows
        vars:
          PACKAGES: ["winget:Git.Git;choco:git;scoop:git"]
        platforms: [windows]
    desc: Install Bash

  # bash:ohmybash: # https://github.com/ohmybash/oh-my-bash

  fish: # https://fishshell.com/
    cmds:
      - task: c:darwin
        vars:
          PACKAGES: ["cask/gitkraken"]
        platforms: [darwin]
      - task: c:linux
        vars:
          PACKAGES: ["apt:fish;apk:fish;dnf:fish;brew:fish"]
        platforms: [linux]
      - cmd: echo "fish shell is only available under wsl or cygwin"
        platforms: [windows]
    desc: Install Fish Shell

  # fish:ohmyfish: # https://github.com/oh-my-fish/oh-my-fish

  nushell: # https://www.nushell.sh/
    cmds:
      - task: c:darwin
        vars:
          PACKAGES: ["nushell"]
        platforms: [darwin]
      - cmd: |
          if command -v apk; then
            echo "https://alpine.fury.io/nushell/" | tee -a /etc/apk/repositories
            apk update
            apk add --allow-untrusted nushell
          elif command -v apt; then
            curl -fsSL https://apt.fury.io/nushell/gpg.key | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/fury-nushell.gpg
            echo "deb https://apt.fury.io/nushell/ /" | sudo tee /etc/apt/sources.list.d/fury.list
            sudo apt update
            sudo apt install nushell
          elif command -v dnf; then
            echo "[gemfury-nushell]
            name=Gemfury Nushell Repo
            baseurl=https://yum.fury.io/nushell/
            enabled=1
            gpgcheck=0
            gpgkey=https://yum.fury.io/nushell/gpg.key" | sudo tee /etc/yum.repos.d/fury-nushell.repo
            sudo dnf install -y nushell
          else
            brew install nushell
          fi
        platforms: [linux]
      - task: c:windows
        vars:
          PACKAGES: ["winget:nushell;choco:nushell;scoop:nu"]
        platforms: [windows]
    desc: Install Nushell

  # nushell:awesome-nu: # https://github.com/nushell/awesome-nu

  pwsh:
    cmds:
      - task: c:darwin
        vars:
          PACKAGES: ["cask/powershell"]
        platforms: [darwin]
      - cmd: bash ./pwsh-install.sh
        platforms: [linux]
      - task: c:windows
        vars:
          PACKAGES: ["winget:Microsoft.PowerShell;choco:pwsh;scoop:main/pwsh"]
        platforms: [windows]
    desc: Install Powershell

  ohmyposh:
    cmds:
      - task: c:darwin
        vars:
          PACKAGES: ["oh-my-posh"]
        platforms: [darwin]
      - cmd: |
          mkdir -p ~/bin
          curl -s https://ohmyposh.dev/install.sh | bash -s -- -d ~/bin
          # brew install jandedobbeleer/oh-my-posh/oh-my-posh
        platforms: [linux]
      - task: c:windows
        vars:
          PACKAGES: ["winget:JanDeDobbeleer.OhMyPosh;choco:oh-my-posh"]
        platforms: [windows]
      - cmd: |
          echo "Configure"
        platforms: [darwin, linux]
      - cmd: |
          powershell.exe -NoProfile -ExecutionPolicy Bypass -File ./ohmyposh-config.ps1
        platforms: [windows]
    desc: Install OhMyPosh

  # starship: # https://starship.rs/

  utils:
    cmds:
      - task: c:darwin
        vars:
          PACKAGES:
            - autojump # https://github.com/wting/autojump
            - fzf # https://junegunn.github.io/fzf/
            - tmux
        platforms: [darwin]
      - task: c:linux
        vars:
          PACKAGES:
            - ???
        platforms: [linux]
      - task: c:windows
        vars:
          PACKAGES:
            - winget:junegunn.fzf;choco:fzf;scoop:fzf
        platforms: [windows]
      - cmd: | # https://github.com/tkellogg/Jump-Location
          powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Install-Module Jump.Location -Scope CurrentUser"
        platforms: [windows]
      - cmd: | # https://github.com/vors/ZLocation
          powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Install-Module ZLocation -Scope CurrentUser"
        platforms: [windows]
      - task: utils:yazi

  # https://yazi-rs.github.io/
  # TODO: untested
  utils:yazi:
    cmds:
      - task: c:darwin
        vars:
          PACKAGES:
            [yazi, ffmpeg, sevenzip, jq, poppler, fd, ripgrep, fzf, zoxide, resvg, imagemagick, font-symbols-only-nerd-font]
        platforms: [darwin]
      - task: c:windows
        vars:
          PACKAGES:
            - winget:sxyazi.yazi;choco:yazi;scoop:yazi
            - winget:Gyan.FFmpeg;choco:ffmpeg;scoop:ffmpeg
            - winget:7zip.7zip;choco:7zip;scoop:7zip
            - winget:jqlang.jq;choco:jq;scoop:jq
            - choco:poppler;scoop:poppler
            - winget:sharkdp.fd;choco:fd;scoop:fd
            - winget:BurntSushi.ripgrep.MSVC;choco:ripgrep;scoop:ripgrep
            - winget:fzf;choco:fzf;scoop:fzf
            - winget:ajeetdsouza.zoxide;choco:zoxide;scoop:zoxide
            - scoop:resvg
            - winget:ImageMagick.ImageMagick;choco:imagemagick;scoop:imagemagick
            - winget:MikeFarah.yq;choco:yq;scoop:main/yq
    desc: Install useful utils

  zsh:
    cmds:
      - task: c:darwin
        vars:
          PACKAGES: [zsh]
        platforms: [darwin]
      - task: c:linux
        vars:
          PACKAGES: []
        platforms: [linux]
      - cmd: echo "ZSH can only be used in WSL"
        platforms: [windows]
    desc: Install Zsh

  # zsh:ohmyzsh: # https://ohmyz.sh/
